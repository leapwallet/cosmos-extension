diff --git a/node_modules/cosmjs-types/cosmos/tx/v1beta1/tx.js b/node_modules/cosmjs-types/cosmos/tx/v1beta1/tx.js
index a94df9c..2e451b2 100644
--- a/node_modules/cosmjs-types/cosmos/tx/v1beta1/tx.js
+++ b/node_modules/cosmjs-types/cosmos/tx/v1beta1/tx.js
@@ -202,7 +202,7 @@ exports.SignDoc = {
         if (message.chainId !== "") {
             writer.uint32(26).string(message.chainId);
         }
-        if (!message.accountNumber.isZero()) {
+        if (typeof message.accountNumber === 'bigint' ? message.accountNumber !== BigInt(0) : !message.accountNumber.isZero()) {
             writer.uint32(32).uint64(message.accountNumber);
         }
         return writer;
@@ -238,7 +238,7 @@ exports.SignDoc = {
             bodyBytes: (0, helpers_1.isSet)(object.bodyBytes) ? (0, helpers_1.bytesFromBase64)(object.bodyBytes) : new Uint8Array(),
             authInfoBytes: (0, helpers_1.isSet)(object.authInfoBytes) ? (0, helpers_1.bytesFromBase64)(object.authInfoBytes) : new Uint8Array(),
             chainId: (0, helpers_1.isSet)(object.chainId) ? String(object.chainId) : "",
-            accountNumber: (0, helpers_1.isSet)(object.accountNumber) ? helpers_1.Long.fromValue(object.accountNumber) : helpers_1.Long.UZERO,
+            accountNumber: (0, helpers_1.isSet)(object.accountNumber) ? helpers_1.Long.fromValue(object.accountNumber?.toString()) : helpers_1.Long.UZERO,
         };
     },
     toJSON(message) {
@@ -259,7 +259,7 @@ exports.SignDoc = {
         message.chainId = object.chainId ?? "";
         message.accountNumber =
             object.accountNumber !== undefined && object.accountNumber !== null
-                ? helpers_1.Long.fromValue(object.accountNumber)
+                ? helpers_1.Long.fromValue(object.accountNumber?.toString())
                 : helpers_1.Long.UZERO;
         return message;
     },
@@ -567,7 +567,7 @@ exports.SignerInfo = {
         if (message.modeInfo !== undefined) {
             exports.ModeInfo.encode(message.modeInfo, writer.uint32(18).fork()).ldelim();
         }
-        if (!message.sequence.isZero()) {
+        if (typeof message.sequence === 'bigint' ? message.sequence !== BigInt(0) : !message.sequence.isZero()) {
             writer.uint32(24).uint64(message.sequence);
         }
         return writer;
@@ -599,7 +599,7 @@ exports.SignerInfo = {
         return {
             publicKey: (0, helpers_1.isSet)(object.publicKey) ? any_1.Any.fromJSON(object.publicKey) : undefined,
             modeInfo: (0, helpers_1.isSet)(object.modeInfo) ? exports.ModeInfo.fromJSON(object.modeInfo) : undefined,
-            sequence: (0, helpers_1.isSet)(object.sequence) ? helpers_1.Long.fromValue(object.sequence) : helpers_1.Long.UZERO,
+            sequence: (0, helpers_1.isSet)(object.sequence) ? helpers_1.Long.fromValue(object.sequence?.toString()) : helpers_1.Long.UZERO,
         };
     },
     toJSON(message) {
@@ -623,7 +623,7 @@ exports.SignerInfo = {
                 : undefined;
         message.sequence =
             object.sequence !== undefined && object.sequence !== null
-                ? helpers_1.Long.fromValue(object.sequence)
+                ? helpers_1.Long.fromValue(object.sequence?.toString())
                 : helpers_1.Long.UZERO;
         return message;
     },
@@ -815,7 +815,7 @@ exports.Fee = {
         for (const v of message.amount) {
             coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();
         }
-        if (!message.gasLimit.isZero()) {
+        if (typeof message.gasLimit === 'bigint' ? message.gasLimit !== BigInt(0) : !message.gasLimit.isZero()) {
             writer.uint32(16).uint64(message.gasLimit);
         }
         if (message.payer !== "") {
@@ -855,7 +855,7 @@ exports.Fee = {
     fromJSON(object) {
         return {
             amount: Array.isArray(object?.amount) ? object.amount.map((e) => coin_1.Coin.fromJSON(e)) : [],
-            gasLimit: (0, helpers_1.isSet)(object.gasLimit) ? helpers_1.Long.fromValue(object.gasLimit) : helpers_1.Long.UZERO,
+            gasLimit: (0, helpers_1.isSet)(object.gasLimit) ? helpers_1.Long.fromValue(object.gasLimit?.toString()) : helpers_1.Long.UZERO,
             payer: (0, helpers_1.isSet)(object.payer) ? String(object.payer) : "",
             granter: (0, helpers_1.isSet)(object.granter) ? String(object.granter) : "",
         };
@@ -878,7 +878,7 @@ exports.Fee = {
         message.amount = object.amount?.map((e) => coin_1.Coin.fromPartial(e)) || [];
         message.gasLimit =
             object.gasLimit !== undefined && object.gasLimit !== null
-                ? helpers_1.Long.fromValue(object.gasLimit)
+                ? helpers_1.Long.fromValue(object.gasLimit?.toString())
                 : helpers_1.Long.UZERO;
         message.payer = object.payer ?? "";
         message.granter = object.granter ?? "";
diff --git a/node_modules/cosmjs-types/ibc/applications/transfer/v1/tx.js b/node_modules/cosmjs-types/ibc/applications/transfer/v1/tx.js
index c76b959..dc5c54f 100644
--- a/node_modules/cosmjs-types/ibc/applications/transfer/v1/tx.js
+++ b/node_modules/cosmjs-types/ibc/applications/transfer/v1/tx.js
@@ -62,7 +62,7 @@ exports.MsgTransfer = {
         if (message.timeoutHeight !== undefined) {
             client_1.Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();
         }
-        if (!message.timeoutTimestamp.isZero()) {
+        if (typeof message.timeoutTimestamp === 'bigint' ? message.timeoutTimestamp !== BigInt(0) : !message.timeoutTimestamp.isZero()) {
             writer.uint32(56).uint64(message.timeoutTimestamp);
         }
         if (message.memo !== "") {
@@ -116,7 +116,7 @@ exports.MsgTransfer = {
             sender: (0, helpers_1.isSet)(object.sender) ? String(object.sender) : "",
             receiver: (0, helpers_1.isSet)(object.receiver) ? String(object.receiver) : "",
             timeoutHeight: (0, helpers_1.isSet)(object.timeoutHeight) ? client_1.Height.fromJSON(object.timeoutHeight) : undefined,
-            timeoutTimestamp: (0, helpers_1.isSet)(object.timeoutTimestamp) ? helpers_1.Long.fromValue(object.timeoutTimestamp) : helpers_1.Long.UZERO,
+            timeoutTimestamp: (0, helpers_1.isSet)(object.timeoutTimestamp) ? helpers_1.Long.fromValue(object.timeoutTimestamp?.toString()) : helpers_1.Long.UZERO,
             memo: (0, helpers_1.isSet)(object.memo) ? String(object.memo) : "",
         };
     },
diff --git a/node_modules/cosmjs-types/ibc/core/client/v1/client.js b/node_modules/cosmjs-types/ibc/core/client/v1/client.js
index 5984754..79366ac 100644
--- a/node_modules/cosmjs-types/ibc/core/client/v1/client.js
+++ b/node_modules/cosmjs-types/ibc/core/client/v1/client.js
@@ -379,10 +379,10 @@ function createBaseHeight() {
 }
 exports.Height = {
     encode(message, writer = _m0.Writer.create()) {
-        if (!message.revisionNumber.isZero()) {
+        if (typeof message.revisionNumber === 'bigint' ? message.revisionNumber !== BigInt(0) : !message.revisionNumber.isZero()) {
             writer.uint32(8).uint64(message.revisionNumber);
         }
-        if (!message.revisionHeight.isZero()) {
+        if (typeof message.revisionHeight === 'bigint' ? message.revisionHeight !== BigInt(0) : !message.revisionHeight.isZero()) {
             writer.uint32(16).uint64(message.revisionHeight);
         }
         return writer;
@@ -409,8 +409,8 @@ exports.Height = {
     },
     fromJSON(object) {
         return {
-            revisionNumber: (0, helpers_1.isSet)(object.revisionNumber) ? helpers_1.Long.fromValue(object.revisionNumber) : helpers_1.Long.UZERO,
-            revisionHeight: (0, helpers_1.isSet)(object.revisionHeight) ? helpers_1.Long.fromValue(object.revisionHeight) : helpers_1.Long.UZERO,
+            revisionNumber: (0, helpers_1.isSet)(object.revisionNumber) ? helpers_1.Long.fromValue(object.revisionNumber?.toString()) : helpers_1.Long.UZERO,
+            revisionHeight: (0, helpers_1.isSet)(object.revisionHeight) ? helpers_1.Long.fromValue(object.revisionHeight?.toString()) : helpers_1.Long.UZERO,
         };
     },
     toJSON(message) {
@@ -425,11 +425,11 @@ exports.Height = {
         const message = createBaseHeight();
         message.revisionNumber =
             object.revisionNumber !== undefined && object.revisionNumber !== null
-                ? helpers_1.Long.fromValue(object.revisionNumber)
+                ? helpers_1.Long.fromValue(object.revisionNumber?.toString())
                 : helpers_1.Long.UZERO;
         message.revisionHeight =
             object.revisionHeight !== undefined && object.revisionHeight !== null
-                ? helpers_1.Long.fromValue(object.revisionHeight)
+                ? helpers_1.Long.fromValue(object.revisionHeight?.toString())
                 : helpers_1.Long.UZERO;
         return message;
     },
